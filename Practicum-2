    /// <summary>
    /// Абстрактный класс
    /// </summary>
abstract class AbstractHandler
    {
        /// <summary>
        /// Абстрактный метод открытия
        /// </summary>
        public abstract void Open();
        /// <summary>
        /// Абстрактный метод создания
        /// </summary>
        public abstract void Create();
        /// <summary>
        /// Абстрактный метод изменения
        /// </summary>
        public abstract void Change();
        /// <summary>
        /// Абстрактный метод сохранения
        /// </summary>
        public abstract void Save();
    }

    /// <summary>
    /// XMLHandler потомок класса AbstractHandler
    /// </summary>
class XMLHandler : AbstractHandler
    {

        /// <summary>
        /// Метод наследующийся из абстрактного метода Open
        /// </summary>
        public override void Open()
        {
            Console.WriteLine("Документ открытый");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Create
        /// </summary>
        public override void Create()
        {
            Console.WriteLine("Документ создан");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Change
        /// </summary>
        public override void Change()
        {
            Console.WriteLine("Документ изменён");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Save
        /// </summary>
        public override void Save()
        {
            Console.WriteLine("Документ сохранён");
        }

    /// <summary>
    /// TXTHandler Потомок класса AbstractHandler
    /// </summary>
 class TXTHandler : AbstractHandler
    {

        /// <summary>
        /// Метод наследующийся из абстрактного метода Open
        /// </summary>
        public override void Open()
        {
            Console.WriteLine("Документ открытый");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Create
        /// </summary>
        public override void Create()
        {
            Console.WriteLine("Документ создан");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Change
        /// </summary>
        public override void Change()
        {
            Console.WriteLine("Документ изменён");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Save
        /// </summary>
        public override void Save()
        {
            Console.WriteLine("Докумен сохранён");
        }

    /// <summary>
    /// DOCHandler Потомок класса AbstractHandler
    /// </summary>
class DOCHandler : AbstractHandler
    {

        /// <summary>
        /// Метод наследующийся из абстрактного метода Open
        /// </summary>
        public override void Open()
        {
            Console.WriteLine("Документ открыт");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Create
        /// </summary>
        public override void Create()
        {
            Console.WriteLine("Документ создан");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Change
        /// </summary>
        public override void Change()
        {
            Console.WriteLine("Документ изменён");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Save
        /// </summary>
        public override void Save()
        {
            Console.WriteLine("Документ сохранён");
        }
static void Main(string[] args)
        {
            List<AbstractHandler> docum = new List<AbstractHandler>();
            bool flag = true;
            bool flag1 = false;
            bool flag2 = false;
            bool flag3 = false;
            while(flag)
            {
                Console.WriteLine("Введите название формата: ");
                string format = Console.ReadLine();
                switch(format)
                {
                    case "XML":
                    case "xml":
                        AbstractHandler xML = new XMLHandler();
                        Console.WriteLine("Вы ввели формат, теперь вам нужно работать с ним");
                        flag1 = true;
                        while (flag1)
                        {
                            Console.WriteLine("Введите клавишу для открытия:");
                            string key1 = Console.ReadLine();
                            switch (key1)
                            {
                                case "Q":
                                case "q":
                                    xML.Open();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для создания: ");
                            string key2 = Console.ReadLine();
                            switch(key2)
                            {
                                case "Q":
                                case "q":
                                    xML.Create();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для изменения: ");
                            string key3 = Console.ReadLine();
                            switch(key3)
                            {
                                case "Q":
                                case "q":
                                    xML.Change();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для сохранения: ");
                            string key4 = Console.ReadLine();
                            switch(key4)
                            {
                                case "Q":
                                case "q":
                                    xML.Save();
                                    break;
                            }

                            Console.WriteLine("Вы поработали с этим файлом. Хотите со следующим?");
                            string key5 = Console.ReadLine();
                            if (key5 == "Y" || key5 == "y")
                            {
                                Console.WriteLine("Вы выбрали продолжить");
                                continue;
                            }
                            else if(key5 == "N" || key5 == "n")
                            {
                                Console.WriteLine("Вы выбрали завершить");
                                return;
                            }
                        }
                        
                        flag1 = false;
                        break;

                    case "TXT":
                    case "txt":
                        AbstractHandler tXT = new TXTHandler();
                        Console.WriteLine("Вы ввели формат, теперь вам нужно работать с ним");
                        flag2 = true;
                        while (flag2)
                        {
                            Console.WriteLine("Введите клавишу для открытия:");
                            string key1 = Console.ReadLine();
                            switch (key1)
                            {
                                case "Q":
                                case "q":
                                    tXT.Open();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для создания: ");
                            string key2 = Console.ReadLine();
                            switch (key2)
                            {
                                case "Q":
                                case "q":
                                    tXT.Create();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для изменения: ");
                            string key3 = Console.ReadLine();
                            switch (key3)
                            {
                                case "Q":
                                case "q":
                                    tXT.Change();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для сохранения: ");
                            string key4 = Console.ReadLine();
                            switch (key4)
                            {
                                case "Q":
                                case "q":
                                    tXT.Save();
                                    break;
                            }

                            Console.WriteLine("Вы поработали с этим файлом. Хотите со следующим?");
                            string key5 = Console.ReadLine();
                            if (key5 == "Y" || key5 == "y")
                            {
                                Console.WriteLine("Вы выбрали продолжить");
                                continue;
                            }
                            else if (key5 == "N" || key5 == "n")
                            {
                                Console.WriteLine("Вы выбрали завершить");
                                return;
                            }
                        }
                        flag2 = false;
                        break;
                      

                    case "DOC":
                    case "doc":
                        AbstractHandler dOC = new DOCHandler();
                        Console.WriteLine("Вы ввели формат, теперь вам нужно работать с ним");
                        flag3 = true;
                        while(flag3)
                        {
                            Console.WriteLine("Введите клавишу для открытия:");
                            string key1 = Console.ReadLine();
                            switch (key1)
                            {
                                case "Q":
                                case "q":
                                    dOC.Open();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для создания: ");
                            string key2 = Console.ReadLine();
                            switch (key2)
                            {
                                case "Q":
                                case "q":
                                    dOC.Create();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для изменения: ");
                            string key3 = Console.ReadLine();
                            switch (key3)
                            {
                                case "Q":
                                case "q":
                                    dOC.Change();
                                    break;
                            }

                            Console.WriteLine("Введите клавишу для сохранения: ");
                            string key4 = Console.ReadLine();
                            switch (key4)
                            {
                                case "Q":
                                case "q":
                                    dOC.Save();
                                    break;
                            }

                            Console.WriteLine("Вы поработали со всеми форматами." +
                                "Желаете повторить?");

                            string restar = Console.ReadLine();
                            if (restar == "Y" || restar == "y"|| restar == "YES" || restar == "yes")
                            {
                                continue;
                            }
                            else if(restar == "N" || restar == "n" || restar == "NO" || restar == "no")
                            {
                                return;
                            }
                            Console.ReadKey();
                        }
                        flag3 = false;
                        break;

                    case "A":
                    case "a":return;
                    default: Console.WriteLine("Такого формата не существует");
                    flag = false;
                    break;
            //Console.ReadKey();
        }

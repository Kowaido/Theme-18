    /// <summary>
    /// Абстрактный класс
    /// </summary>
abstract class AbstractHandler
    {
        /// <summary>
        /// Абстрактный метод открытия
        /// </summary>
        public abstract void Open();
        /// <summary>
        /// Абстрактный метод создания
        /// </summary>
        public abstract void Create();
        /// <summary>
        /// Абстрактный метод изменения
        /// </summary>
        public abstract void Change();
        /// <summary>
        /// Абстрактный метод сохранения
        /// </summary>
        public abstract void Save();
    }

    /// <summary>
    /// XMLHandler потомок класса AbstractHandler
    /// </summary>
class XMLHandler : AbstractHandler
    {

        /// <summary>
        /// Метод наследующийся из абстрактного метода Open
        /// </summary>
        public override void Open()
        {
            Console.WriteLine("Документ открытый");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Create
        /// </summary>
        public override void Create()
        {
            Console.WriteLine("Документ создан");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Change
        /// </summary>
        public override void Change()
        {
            Console.WriteLine("Документ изменён");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Save
        /// </summary>
        public override void Save()
        {
            Console.WriteLine("Документ сохранён");
        }

    /// <summary>
    /// TXTHandler Потомок класса AbstractHandler
    /// </summary>
 class TXTHandler : AbstractHandler
    {

        /// <summary>
        /// Метод наследующийся из абстрактного метода Open
        /// </summary>
        public override void Open()
        {
            Console.WriteLine("Документ открытый");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Create
        /// </summary>
        public override void Create()
        {
            Console.WriteLine("Документ создан");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Change
        /// </summary>
        public override void Change()
        {
            Console.WriteLine("Документ изменён");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Save
        /// </summary>
        public override void Save()
        {
            Console.WriteLine("Докумен сохранён");
        }

    /// <summary>
    /// DOCHandler Потомок класса AbstractHandler
    /// </summary>
class DOCHandler : AbstractHandler
    {

        /// <summary>
        /// Метод наследующийся из абстрактного метода Open
        /// </summary>
        public override void Open()
        {
            Console.WriteLine("Документ открыт");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Create
        /// </summary>
        public override void Create()
        {
            Console.WriteLine("Документ создан");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Change
        /// </summary>
        public override void Change()
        {
            Console.WriteLine("Документ изменён");
        }

        /// <summary>
        /// Метод наследующийся из абстрактного метода Save
        /// </summary>
        public override void Save()
        {
            Console.WriteLine("Документ сохранён");
        }
static void Main(string[] args)
        {
            List<AbstractHandler> docum = new List<AbstractHandler>();
            //List<XMLHandler> docum1 = new List<XMLHandler>();
            //List<TXTHandler> docum2 = new List<TXTHandler>();
            //List<DOCHandler> docum3 = new List<DOCHandler>();
            bool flag = true;
            while (flag)
            {
                Console.WriteLine("Введите название документа: ");
                string doc = Console.ReadLine();
                switch (doc)
                {
                    case "XML":
                    case "xml":
                        AbstractHandler xML = new XMLHandler();
                        xML.Open();
                        xML.Create();
                        xML.Change();
                        xML.Save();
                        break;

                    case "TXT":
                    case "txt":
                        AbstractHandler tXT = new TXTHandler();
                        tXT.Open();
                        tXT.Create();
                        tXT.Change();
                        tXT.Save();
                //Console.WriteLine("Введите клавишу для открытия XMLHandler: ");
                }


            }
            //docum = new List<AbstractHandler>();

            Console.ReadKey();
        }
